function [elec] = assignElectrodes(chanlocs)
        elec.Fp1 = find(strcmp({chanlocs.labels}, 'Fp1')==1)	; 
        elec.AF3 = find(strcmp({chanlocs.labels}, 'AF3')==1)	; 
        elec.AF7 = find(strcmp({chanlocs.labels}, 'AF7')==1)	; 
        elec.F3  = find(strcmp({chanlocs.labels}, 'F3')==1)	;
        elec.F5  = find(strcmp({chanlocs.labels}, 'F5')==1)	;
        elec.F7 = find(strcmp({chanlocs.labels}, 'F7')==1)	;
        elec.Fpz  = find(strcmp({chanlocs.labels}, 'Fpz')==1)	;
        elec.AFz = find(strcmp({chanlocs.labels}, 'AFz')==1)	; 
        elec.Fz  = find(strcmp({chanlocs.labels}, 'Fz')==1)	;
        elec.F1  = find(strcmp({chanlocs.labels}, 'F1')==1)	;
        elec.F2 = find(strcmp({chanlocs.labels}, 'F2')==1)	;
        elec.Fp2  = find(strcmp({chanlocs.labels}, 'Fp2')==1)	;
        elec.AF4  = find(strcmp({chanlocs.labels}, 'AF4')==1)	;
        elec.AF8  = find(strcmp({chanlocs.labels}, 'AF8')==1)	;
        elec.F4  = find(strcmp({chanlocs.labels}, 'F4')==1)	;
        elec.F6  = find(strcmp({chanlocs.labels}, 'F6')==1)	;
        elec.F8 = find(strcmp({chanlocs.labels}, 'F8')==1)	;
        elec.FC3 = find(strcmp({chanlocs.labels}, 'FC3')==1)	;
        elec.FC5 = find(strcmp({chanlocs.labels}, 'FC5')==1)	; 
        elec.FT7  = find(strcmp({chanlocs.labels}, 'FT7')==1)	;
        elec.C3  = find(strcmp({chanlocs.labels}, 'C3')==1)	;
        elec.C5  = find(strcmp({chanlocs.labels}, 'C5')==1)	;
        elec.T7  = find(strcmp({chanlocs.labels}, 'T7')==1)	;
        elec.CP3  = find(strcmp({chanlocs.labels}, 'CP3')==1)	;
        elec.CP5 = find(strcmp({chanlocs.labels}, 'CP5')==1)	; 
        elec.TP7  = find(strcmp({chanlocs.labels}, 'TP7')==1)	;
        elec.FCz  = find(strcmp({chanlocs.labels}, 'FCz')==1)	;
        elec.FC1  = find(strcmp({chanlocs.labels}, 'FC1')==1)	;
        elec.FC2 = find(strcmp({chanlocs.labels}, 'FC2')==1)	; 
        elec.Cz  = find(strcmp({chanlocs.labels}, 'Cz')==1)	;
        elec.C1  = find(strcmp({chanlocs.labels}, 'C1')==1)	;
        elec.C2  = find(strcmp({chanlocs.labels}, 'C2')==1)	;
        elec.CPz  = find(strcmp({chanlocs.labels}, 'CPz')==1)	;
        elec.CP1  = find(strcmp({chanlocs.labels}, 'CP1')==1)	;
        elec.CP2 = find(strcmp({chanlocs.labels}, 'CP2')==1)	;
        elec.FC4  = find(strcmp({chanlocs.labels}, 'FC4')==1)	;
        elec.FC6  = find(strcmp({chanlocs.labels}, 'FC6')==1)	;
        elec.FT8  = find(strcmp({chanlocs.labels}, 'FT8')==1)	;
        elec.C4  = find(strcmp({chanlocs.labels}, 'C4')==1)	;
        elec.C6  = find(strcmp({chanlocs.labels}, 'C6')==1)	;
        elec.T8  = find(strcmp({chanlocs.labels}, 'T8')==1)	;
        elec.CP4  = find(strcmp({chanlocs.labels}, 'CP4')==1)	;
        elec.CP6  = find(strcmp({chanlocs.labels}, 'CP6')==1)	;
        elec.TP8 = find(strcmp({chanlocs.labels}, 'TP8')==1)	;
        elec.P3  = find(strcmp({chanlocs.labels}, 'P3')==1)	;
        elec.P5  = find(strcmp({chanlocs.labels}, 'P5')==1)	;
        elec.P7 = find(strcmp({chanlocs.labels}, 'P7')==1)	; 
        elec.P9 = find(strcmp({chanlocs.labels}, 'P9')==1)	; 
        elec.PO3 = find(strcmp({chanlocs.labels}, 'PO3')==1)	; 
        elec.PO7  = find(strcmp({chanlocs.labels}, 'PO7')==1)	;
        elec.O1 = find(strcmp({chanlocs.labels}, 'O1')==1)	;
        elec.Pz  = find(strcmp({chanlocs.labels}, 'Pz')==1)	;
        elec.P1  = find(strcmp({chanlocs.labels}, 'P1')==1)	;
        elec.P2  = find(strcmp({chanlocs.labels}, 'P2')==1)	;
        elec.POz  = find(strcmp({chanlocs.labels}, 'POz')==1)	;
        elec.Oz  = find(strcmp({chanlocs.labels}, 'Oz')==1)	;
        elec.Iz = find(strcmp({chanlocs.labels}, 'Iz')==1)	;
        elec.P4  = find(strcmp({chanlocs.labels}, 'P4')==1)	;
        elec.P6  = find(strcmp({chanlocs.labels}, 'P6')==1)	;
        elec.P8  = find(strcmp({chanlocs.labels}, 'P8')==1)	;
        elec.P10  = find(strcmp({chanlocs.labels}, 'P10')==1)	;
        elec.PO4  = find(strcmp({chanlocs.labels}, 'PO4')==1)	;
        elec.PO8  = find(strcmp({chanlocs.labels}, 'PO8')==1)	;
        elec.O2 = find(strcmp({chanlocs.labels}, 'O2')==1)	;
        elec.VEOG = find(strcmp({chanlocs.labels}, 'VEOG')==1);
        elec.HEOG = find(strcmp({chanlocs.labels}, 'HEOG')==1);
        elec.VEOG2 = find(strcmp({chanlocs.labels}, 'VEOG2')==1);
        elec.HEOG2 = find(strcmp({chanlocs.labels}, 'HEOG2')==1);
        elec.M1 = find(strcmp({chanlocs.labels}, 'M1')==1);
        elec.M2 = find(strcmp({chanlocs.labels}, 'M2')==1);
        elec.Heartrate = find(strcmp({chanlocs.labels}, 'Heartrate')==1);
end